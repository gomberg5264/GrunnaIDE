"use strict";$((function(){var shellprompt="$ ";window.addEventListener("resize",(function(){document.getElementById("terminal-continer").style.height="100%";globalValues.xtermFitAddon.fit()}));$("#terminal-tab").on("shown.bs.tab",(function(){if(!globalValues.xterm){let termContainer=document.getElementById("terminal-continer");globalValues.xterm=new Terminal({cursorBlink:true});globalValues.xterm.open(termContainer);globalValues.xtermFitAddon=new FitAddon;globalValues.xterm.loadAddon(globalValues.xtermFitAddon);var input="";globalValues.xterm.onData((function(data){const code=data.charCodeAt(0);ws.getSubscription("docker:terminal").emit("dockerInput",{character:data})}));document.getElementById("terminal-continer").style.height="100%";globalValues.xtermFitAddon.fit();globalValues.xterm.writeln(shellprompt)}}))}));"use strict";$((function(){CodeMirror.modeURL="/codemirror/mode/%N/%N.js";globalValues.codemirrorInstance=CodeMirror.fromTextArea(document.getElementById("allMyCode"),{lineNumbers:true,tabSize:2,extraKeys:{"Ctrl-Space":"autocomplete"},autoCloseBrackets:true,matchBrackets:true,autoCloseTags:true,foldGutter:true,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],showTrailingSpace:true});$(document).keydown((function(event){if(event.ctrlKey&&event.keyCode==83){event.preventDefault();$.ajax({type:"POST",url:"/api/file/saveFile",data:{fileName:globalValues.loadedFilePath,data:globalValues.codemirrorInstance.getValue()},success:data=>{globalValues.loadedFile=globalValues.codemirrorInstance.getValue()}});$('<div class="alert alert-success">'+'<button type="button" class="close" data-dismiss="alert">'+"&times;</button>File have been saved</div>").hide().appendTo("#alerts").fadeIn(1e3);$(".alert").delay(3e3).fadeOut("normal",(function(){$(this).alert("close")}))}}))}));"use strict";$((function(){$("#reloadFileTree").on("click",(function(e){$.ajax({type:"GET",url:"/api/file/reloadFileTree",success:function(data){globalValues.currentFileTree=data;$("#filetree").fancytree("getTree").reload(createTree(data))}})}));$(document).keydown((function(event){if(event.ctrlKey&&event.keyCode==80){event.preventDefault();$("#searchFilesModal").modal("show");$("#inputSearchFiles").focus()}}))}));function inputSearchFilesListener(){let value=$("#inputSearchFiles").val();$("#listOfSearchFiles").empty();let addedItems=0;if(value.length>=1){let addToList=(path,name)=>{let modeLink=document.createElement("a");modeLink.setAttribute("data-path",path);modeLink.innerHTML=name+"<br/><small>"+path+"</small>";modeLink.classList.add("dropdown-item");modeLink.style.overflow="hidden";modeLink.style.textOverflow="ellipsis";modeLink.addEventListener("click",(function(event){const path=$(event.currentTarget).attr("data-path");retriveFile(path);$("#searchFilesModal").modal("hide");let filetree=$("#filetree").fancytree("getTree");let node=filetree.getNodeByKey(path);node.setActive(true)}));$("#listOfSearchFiles").append(modeLink);addedItems=addedItems+1};let printArray=function(arr){if(Array.isArray(arr)){for(var i=0;i<arr.length;i++){if(arr[i].children){if(arr[i].name.toLowerCase().includes(value.toLowerCase())){addToList(arr[i].path,arr[i].name)}printArray(arr[i].children)}else{if(arr[i].name.toLowerCase().includes(value.toLowerCase())){addToList(arr[i].path,arr[i].name)}}}}else{if(arr.children){if(arr.name.toLowerCase().includes(value.toLowerCase())){addToList(arr.path,arr.name)}printArray(arr.children)}}};printArray(globalValues.currentFileTree)}$("#searchFilesResults").text(addedItems+" files found")}function retriveFile(path){console.log("path: ",path);$.ajax({type:"POST",url:"/api/file/downloadFile",data:{fileName:path},success:data=>{if(globalValues.codemirrorInstance.getValue()===globalValues.loadedFile||globalValues.loadedFile===""){setCodeMirrorData(data,path)}else{globalValues.tempLoadedFile=data;globalValues.tempLoadedFilePath=path;$("#unsavedFileModal").modal("show")}}})}function createTree(array){let outputArray=[];if(Array.isArray(array)){array.forEach(a=>{if(a.children){outputArray.push({title:a.name,key:a.path,folder:true,children:createTree(a.children)})}else{outputArray.push({title:a.name,key:a.path})}})}else{if(array.children){outputArray.push({title:array.name,key:array.path,folder:true,children:createTree(array.children)})}else{outputArray.push({title:array.name,key:array.path})}}return outputArray}"use strict";$((function(){let sortedModeInfo=CodeMirror.modeInfo.slice().sort((a,b)=>{const nameA=a.name.toUpperCase();const nameB=b.name.toUpperCase();let comparison=0;if(nameA>nameB){comparison=1}else if(nameA<nameB){comparison=-1}return comparison});sortedModeInfo.forEach(mode=>{let modeLink=document.createElement("a");modeLink.id=mode.name;modeLink.innerHTML=mode.name;modeLink.classList.add("dropdown-item");$("#dropdownModeMenu").append(modeLink)});$("#dropdownModeMenu a").on("click",event=>{const modeName=$(event.currentTarget).attr("id");let selectedMode=CodeMirror.findModeByName(modeName);setCurrentMode(selectedMode.mode,selectedMode.mime,modeName)})}));"use strict";var globalValues={loadedProject:"",loadedFile:"",loadedFilePath:"",currentFileTree:[],tempLoadedFile:"",tempLoadedFilePath:"",action:"",postData:{},username:"",codemirrorInstance:null,xterm:null,xtermFitAddon:null};"use strict";$((function(){$("#run").on("click",(function(e){$.ajax({type:"POST",url:"/api/docker/compile",success:function(data){console.log("Ajax Post return data: ",data)}})}));$("#menuGitFetch").on("click",(function(e){$.ajax({type:"POST",url:"/api/git/fetch",data:globalValues.postData,success:function(data){console.log("Fetch return: ",data)},error:function(xhr,ajaxOptions,thrownError){console.log("ERROR",xhr);if(xhr.status===401){globalValues.action="gitFetch";globalValues.postData={};if(globalValues.username){$("#gitUsernameModalInput").val(globalValues.username)}$("#gitUsernameModal").modal("show")}}})}));$("#menuGitStatus").on("click",(function(e){$.ajax({type:"POST",url:"/api/git/status",success:function(data){data.stage.forEach(element=>{if(element.status!=="unmodified"){$("#outputData").append("File: "+element.file+" "+element.status+"\n")}});$("#outputData").append("-----------------------------------\n")}})}));$("#menuGitAdd").on("click",(function(e){$("#gitAddModal").modal("show")}));$("#gitAddModalInput").keypress((function(event){var keycode=event.keyCode?event.keyCode:event.which;if(keycode=="13"){$("#gitAddModal").modal("hide");let message=$("#gitAddModalInput").val();$.ajax({type:"POST",url:"/api/git/add",data:{file:message},success:function(data){console.log("Fetch return: ",data)}})}}));$("#menuGitCommit").on("click",(function(e){$("#gitCommitMessageModal").modal("show")}));$("#gitCommitMessageModalInput").keypress((function(event){var keycode=event.keyCode?event.keyCode:event.which;if(keycode=="13"){$("#gitCommitMessageModal").modal("hide");let message=$("#gitCommitMessageModalInput").val();$.ajax({type:"POST",url:"/api/git/commit",data:{commitMessage:message},success:function(data){console.log("Fetch return: ",data)}})}}));$("#menuGitPush").on("click",(function(e){$.ajax({type:"POST",url:"/api/git/push",data:globalValues.postData,success:function(data){$("#filetree").fancytree("getTree").reload(createTree(data))},error:function(xhr,ajaxOptions,thrownError){console.log("ERROR",xhr);if(xhr.status===401){globalValues.action="gitPush";globalValues.postData={};if(globalValues.username){$("#gitUsernameModalInput").val(globalValues.username)}$("#gitUsernameModal").modal("show")}}})}));$("#menuGitPull").on("click",(function(e){$.ajax({type:"POST",url:"/api/git/pull",data:globalValues.postData,success:function(data){$("#filetree").fancytree("getTree").reload(createTree(data))},error:function(xhr,ajaxOptions,thrownError){if(xhr.status===401){globalValues.action="gitPull";globalValues.postData={};if(globalValues.username){$("#gitUsernameModalInput").val(globalValues.username)}$("#gitUsernameModal").modal("show")}}})}));$("#menuGitTest").on("click",(function(e){$.ajax({type:"POST",url:"/api/git/test",success:function(data){console.log("Fetch return: ",data)}})}));$("#menuOpenFindFileDialog").on("click",(function(e){$("#searchFilesModal").modal("show");$("#inputSearchFiles").focus()}))}));"use strict";$((function(){$("#create-project-form").on("submit",(function(e){if(!e.isDefaultPrevented()){let formData=$(this).serialize();$.ajax({type:"POST",url:"/api/project/createProject",data:formData}).done(data=>{$("#createProjectDialog").modal("hide");globalValues.currentFileTree=data;$("#filetree").fancytree("getTree").reload(createTree(data));createNewDocker()}).fail((data,textStatus,thrown)=>{console.log("dataError",data);if(data.status===401){$("#createProjectDialog").modal("hide");globalValues.action="createNewProject";if(globalValues.username){$("#gitUsernameModalInput").val(globalValues.username)}$("#gitUsernameModal").modal("show")}});return false}e.preventDefault()}));$("#gitUsernameModalInput").keypress((function(event){var keycode=event.keyCode?event.keyCode:event.which;if(keycode=="13"){$("#gitUsernameModal").modal("hide");globalValues.username=$("#gitUsernameModalInput").val();$("#createProjectUsername").val($("#gitUsernameModalInput").val());globalValues.postData.username=$("#gitUsernameModalInput").val();$("#gitPasswordModal").modal("show")}}));$("#gitPasswordModalInput").keypress((function(event){var keycode=event.keyCode?event.keyCode:event.which;if(keycode=="13"){$("#gitPasswordModal").modal("hide");$("#createProjectPassword").val($("#gitPasswordModalInput").val());globalValues.postData.password=$("#gitPasswordModalInput").val();$("#gitPasswordModalInput").val("");switch(globalValues.action){case"createNewProject":$("#create-project-form").submit();break;case"gitPull":$("#menuGitPull").click();break;case"gitPush":$("#menuGitPush").click();break;case"gitFetch":$("#menuGitFetch").click();break}globalValues.action=""}}));$("#openProjectDialog").on("show.bs.modal",(function(event){$.ajax({type:"GET",url:"/api/project/featchAllProjects",success:function(data){$("#openProjectControlSelect").empty();data.forEach(project=>{$("#openProjectControlSelect").append('<option value="'+project.id+'">'+project.name+"</option>")})}})}));$("#createProjectDialog").on("show.bs.modal",(function(event){$.ajax({type:"GET",url:"/api/project/listAllAvailibleImages",success:function(data){$("#createProjectImageSelect").empty();data.forEach(project=>{$("#createProjectImageSelect").append('<option value="'+project+'">'+project+"</option>")})}})}));$("#projectSettingsDialog").on("show.bs.modal",(function(event){$.ajax({type:"GET",url:"/api/project/listAllAvailibleImages",success:function(data){$("#projectSettingsImageSelect").empty();data.forEach(project=>{$("#projectSettingsImageSelect").append('<option value="'+project+'">'+project+"</option>")})}})}));$("#open-project-form").on("submit",(function(event){let projectIdNumber=$("#openProjectControlSelect").children("option:selected").val();$.ajax({type:"GET",url:"/api/project/getAllFiles",data:{projectId:projectIdNumber},success:function(data){$("#openProjectDialog").modal("hide");globalValues.currentFileTree=data;$("#filetree").fancytree("getTree").reload(createTree(data));createNewDocker()}});event.preventDefault()}));$("#menuRemoveProject").on("click",(function(event){let deleteModal=$("#removeProjectModal");deleteModal.modal("show")}));$("#removeProjectModalBtn").on("click",(function(event){$.ajax({type:"POST",url:"/api/project/removeProject",success:function(data){window.location.href="/dashboard"}});$("#removeProjectModal").modal("hide")}));$("#unsavedFileContinueModalBtn").on("click",(function(event){setCodeMirrorData(globalValues.tempLoadedFile,globalValues.tempLoadedFilePath);$("#unsavedFileModal").modal("hide")}));$("#project-settings-form").on("submit",(function(e){if(!e.isDefaultPrevented()){let formData=$(this).serialize();console.log("formData",formData);$.ajax({type:"POST",url:"/api/project/projectSettings",data:formData}).done(data=>{$("#projectSettingsDialog").modal("hide");createNewDocker()}).fail((data,textStatus,thrown)=>{console.log("dataError",data)});return false}e.preventDefault()}))}));function createNewDocker(){$.ajax({type:"POST",url:"/api/docker/createDocker",data:{},success:function(data){dockerAttach(5)}})}function dockerAttach(amontLeft){if(amontLeft>0){try{ws.getSubscription("docker:terminal").emit("dockerAttach",{})}catch(e){amontLeft--;setTimeout(()=>{dockerAttach(amontLeft)},1e3)}}else{let addNewData="Error when attached to WS terminal"+"<br/>";$("#outputData").append(addNewData)}}function setCodeMirrorData(data,path){var val=path,m,mode,spec,name;if(m=/.+\.([^.]+)$/.exec(val)){var info=CodeMirror.findModeByExtension(m[1])}else{m=/([^/]+$)/.exec(val);var info=CodeMirror.findModeByFileName(m[1])}if(info){name=info.name;mode=info.mode;spec=info.mime}else{mode=spec=null}setCurrentMode(mode,spec,name);globalValues.codemirrorInstance.setValue(data);globalValues.loadedFile=data;globalValues.loadedFilePath=path}function setCurrentMode(mode,spec,name){if(mode){globalValues.codemirrorInstance.setOption("mode",spec);CodeMirror.autoLoadMode(globalValues.codemirrorInstance,mode);$("#footerMode").text(name)}else{globalValues.codemirrorInstance.setOption("mode",null);CodeMirror.autoLoadMode(globalValues.codemirrorInstance,null);$("#footerMode").text("text")}}"use strict";let ws=null;(function(){startWs();WsNotice();initFancyTree();fileMenu();openProject()})();function startWs(){console.log("Start Ws");ws=adonis.Ws().connect();ws.on("open",()=>{subscribeToOutputChannel();subscribeToTerminalChannel()})}function subscribeToOutputChannel(){const infoChannel=ws.subscribe("docker:infoChannel");console.log("infoChannel; ",infoChannel);infoChannel.on("output",output=>{let addNewData=output+"<br/>";$("#outputData").append(addNewData)})}function subscribeToTerminalChannel(){const terminalChannel=ws.subscribe("docker:terminal");console.log("terminalChannel: ",terminalChannel);terminalChannel.on("terminal",terminal=>{if(globalValues.xterm){globalValues.xterm.write(terminal)}$("#terminalOutput").append(terminal);$("#terminalOutput").scrollTop($("#terminalOutput").prop("scrollHeight"))})}function initFancyTree(){$("#filetree").fancytree({extensions:["childcounter"],activate:(event,data)=>{if(!data.node.isFolder()){retriveFile(data.node.key)}},source:[],childcounter:{deep:true,hideZeros:true,hideExpanded:true}})}function openProject(){const getQueryParams=(params,url)=>{let href=url;let reg=new RegExp("[?&]"+params+"=([^&#]*)","i");let queryString=reg.exec(href);return queryString?queryString[1]:null};const projectId=getQueryParams("project",window.location.href);$.ajax({type:"GET",url:"/api/project/getAllFiles",data:{projectId:projectId},success:function(data){$("#openProjectDialog").modal("hide");globalValues.currentFileTree=data;$("#filetree").fancytree("getTree").reload(createTree(data));createNewDocker()}})}function WsNotice(){let ws=adonis.Ws().connect();let error=false;ws.on("open",()=>{$('<div class="alert alert-success">'+'<button type="button" class="close" data-dismiss="alert">'+"&times;</button>Connected to Ws</div>").hide().appendTo("#alerts").fadeIn(1e3);$(".alert").delay(3e3).fadeOut("normal",(function(){$(this).alert("close")}));error=false});ws.on("error",event=>{if(!error){$('<div class="alert alert-error">'+'<button type="button" class="close" data-dismiss="alert">'+"&times;</button>Error with connection to WS</div>").hide().appendTo("#alerts").fadeIn(1e3);$(".alert").delay(3e3).fadeOut("normal",(function(){$(this).alert("close")}));error=true}})}function fileMenu(){$.contextMenu({selector:"#filetree span.fancytree-title",items:{createDirectory:{name:"Create Directory",icon:"copy",callback:function(key,opt){var node=$.ui.fancytree.getNode(opt.$trigger);globalValues.postData={};globalValues.postData.fromDirectory=node.key;$("#createDirectoryModalInput").val("");$("#createDirectoryModal").modal("show")}},createFile:{name:"Create file",icon:"copy",callback:function(key,opt){var node=$.ui.fancytree.getNode(opt.$trigger);globalValues.postData={};globalValues.postData.fromDirectory=node.key;$("#createFileModal").modal("show")}},delete:{name:"Delete",icon:"trash",callback:function(key,opt){var node=$.ui.fancytree.getNode(opt.$trigger);globalValues.postData={};globalValues.postData.fileOrDirectory=node.key;let deleteModal=$("#deleteFileDirectoryModal");deleteModal.find(".modal-body").text("Delete: "+node.key);deleteModal.modal("show")}}},callback:function(itemKey,opt){var node=$.ui.fancytree.getNode(opt.$trigger);alert("select "+itemKey+" on "+node)}});$("#createDirectoryModalInput").keypress((function(event){var keycode=event.keyCode?event.keyCode:event.which;if(keycode=="13"){$("#createDirectoryModal").modal("hide");globalValues.postData.newDirectory=$("#createDirectoryModalInput").val();$.ajax({type:"POST",url:"/api/file/createDirectory",data:globalValues.postData,success:data=>{$("#filetree").fancytree("getTree").reload(createTree(data))}})}}));$("#createFileModalInput").keypress((function(event){var keycode=event.keyCode?event.keyCode:event.which;if(keycode=="13"){$("#createFileModal").modal("hide");globalValues.postData.newFile=$("#createFileModalInput").val();$.ajax({type:"POST",url:"/api/file/createFile",data:globalValues.postData,success:data=>{$("#filetree").fancytree("getTree").reload(createTree(data))}})}}));$("#deleteFileDirectoryModalBtn").on("click",(function(e){console.log("delete file: ",globalValues.postData);$("#deleteFileDirectoryModal").modal("hide");$.ajax({type:"DELETE",url:"/api/file/deleteFileDirectory",data:globalValues.postData,success:data=>{$("#filetree").fancytree("getTree").reload(createTree(data))}})}))}
//# sourceMappingURL=app.min.js.map